{"ast":null,"code":"var _jsxFileName = \"/home/alexv/workspace/AI4LD/presentacion2_C/src/components/ClickableInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InfoModal from './InfoModal';\nimport Icon from './Icon';\nimport { getDefinition } from '../data/definitions';\n\n/**\n * Componente ClickableInfo - Envuelve elementos para hacerlos clickeables y mostrar información\n * Soporta tanto definiciones predefinidas (definitionKey) como contenido personalizado\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClickableInfo = ({\n  children,\n  title,\n  content,\n  type,\n  className = \"\",\n  definitionKey = null,\n  showIndicator = true\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Si se proporciona definitionKey, usar la definición predefinida\n  const definition = definitionKey ? getDefinition(definitionKey) : null;\n  const finalTitle = definition ? definition.title : title;\n  const finalContent = definition ? definition.content : content;\n  const finalType = definition ? definition.type : type;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `cursor-pointer hover:scale-105 transition-all duration-300 hover:shadow-lg relative group ${className}`,\n      onClick: () => setIsModalOpen(true),\n      role: \"button\",\n      tabIndex: 0,\n      onKeyDown: e => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          setIsModalOpen(true);\n        }\n      },\n      \"aria-label\": `Hacer clic para más información sobre ${finalTitle}`,\n      children: [children, showIndicator && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-2 right-2 bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity z-10\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"info\",\n          className: \"w-3 h-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      title: finalTitle,\n      content: finalContent,\n      type: finalType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClickableInfo, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = ClickableInfo;\nexport default ClickableInfo;\nvar _c;\n$RefreshReg$(_c, \"ClickableInfo\");","map":{"version":3,"names":["React","useState","InfoModal","Icon","getDefinition","jsxDEV","_jsxDEV","Fragment","_Fragment","ClickableInfo","children","title","content","type","className","definitionKey","showIndicator","_s","isModalOpen","setIsModalOpen","definition","finalTitle","finalContent","finalType","onClick","role","tabIndex","onKeyDown","e","key","preventDefault","name","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/home/alexv/workspace/AI4LD/presentacion2_C/src/components/ClickableInfo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport InfoModal from './InfoModal';\nimport Icon from './Icon';\nimport { getDefinition } from '../data/definitions';\n\n/**\n * Componente ClickableInfo - Envuelve elementos para hacerlos clickeables y mostrar información\n * Soporta tanto definiciones predefinidas (definitionKey) como contenido personalizado\n */\nconst ClickableInfo = ({ \n  children, \n  title, \n  content, \n  type, \n  className = \"\", \n  definitionKey = null,\n  showIndicator = true \n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  \n  // Si se proporciona definitionKey, usar la definición predefinida\n  const definition = definitionKey ? getDefinition(definitionKey) : null;\n  const finalTitle = definition ? definition.title : title;\n  const finalContent = definition ? definition.content : content;\n  const finalType = definition ? definition.type : type;\n  \n  return (\n    <>\n      <div \n        className={`cursor-pointer hover:scale-105 transition-all duration-300 hover:shadow-lg relative group ${className}`}\n        onClick={() => setIsModalOpen(true)}\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            setIsModalOpen(true);\n          }\n        }}\n        aria-label={`Hacer clic para más información sobre ${finalTitle}`}\n      >\n        {children}\n        {/* Indicador de que es clickeable */}\n        {showIndicator && (\n          <div className=\"absolute top-2 right-2 bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity z-10\">\n            <Icon name=\"info\" className=\"w-3 h-3\" />\n          </div>\n        )}\n      </div>\n      <InfoModal \n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        title={finalTitle}\n        content={finalContent}\n        type={finalType}\n      />\n    </>\n  );\n};\n\nexport default ClickableInfo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,aAAa,QAAQ,qBAAqB;;AAEnD;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIA,MAAMC,aAAa,GAAGA,CAAC;EACrBC,QAAQ;EACRC,KAAK;EACLC,OAAO;EACPC,IAAI;EACJC,SAAS,GAAG,EAAE;EACdC,aAAa,GAAG,IAAI;EACpBC,aAAa,GAAG;AAClB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMmB,UAAU,GAAGL,aAAa,GAAGX,aAAa,CAACW,aAAa,CAAC,GAAG,IAAI;EACtE,MAAMM,UAAU,GAAGD,UAAU,GAAGA,UAAU,CAACT,KAAK,GAAGA,KAAK;EACxD,MAAMW,YAAY,GAAGF,UAAU,GAAGA,UAAU,CAACR,OAAO,GAAGA,OAAO;EAC9D,MAAMW,SAAS,GAAGH,UAAU,GAAGA,UAAU,CAACP,IAAI,GAAGA,IAAI;EAErD,oBACEP,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA;MACEQ,SAAS,EAAE,6FAA6FA,SAAS,EAAG;MACpHU,OAAO,EAAEA,CAAA,KAAML,cAAc,CAAC,IAAI,CAAE;MACpCM,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAE,CAAE;MACZC,SAAS,EAAGC,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,GAAG,EAAE;UACtCD,CAAC,CAACE,cAAc,CAAC,CAAC;UAClBX,cAAc,CAAC,IAAI,CAAC;QACtB;MACF,CAAE;MACF,cAAY,yCAAyCE,UAAU,EAAG;MAAAX,QAAA,GAEjEA,QAAQ,EAERM,aAAa,iBACZV,OAAA;QAAKQ,SAAS,EAAC,uKAAuK;QAAAJ,QAAA,eACpLJ,OAAA,CAACH,IAAI;UAAC4B,IAAI,EAAC,MAAM;UAACjB,SAAS,EAAC;QAAS;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN7B,OAAA,CAACJ,SAAS;MACRkC,MAAM,EAAElB,WAAY;MACpBmB,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAAC,KAAK,CAAE;MACrCR,KAAK,EAAEU,UAAW;MAClBT,OAAO,EAAEU,YAAa;MACtBT,IAAI,EAAEU;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAClB,EAAA,CAjDIR,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAmDnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}